#server:
#  port: 9090
#
##resilience4j:
##  circuitbreaker:
##    default:
##      # 최근 10개 요청 중 응답속도가 1초 초과한 비율이 70% 이상일때 Circuit Breaker OPEN
##      # 단, 5개 요청까지는 OPEN하지 않음. http timeout정책은 resilience.circuitbreaker.timeout 참조
##      # slowCallDurationThreshold값은 http timeout시간보다 작아야 제대로 동작함. 크면, timeout이 먼저 발생하므로 의미가 없음.
##      slidingWindowType: COUNT_BASED           # default: COUNT_BASED
##      slidingWindowSize: 10                    # default: 100
##      minimumNumberOfCalls: 5                  # default: 100
##      failureRateThreshold: 50                 # default: 50
##      waitDurationInOpenState: 30000           # default: 60000
#
#logging:
#  level:
#    root: DEBUG
#    org.springframework.cloud.gateway: DEBUG
#    reactor.netty.http.client: DEBUG
#  pattern:
#    console: "[%d{HH:mm:ss.SSS}][%-5level][%logger{36}.%method:%line] - %msg%n"
#
#spring:
#  security:
#    oauth2:
#      client:
#        provider:
#          keycloak:
#            token-uri: http://localhost:8080/auth/realms/demo/protocol/openid-connect/token
#            authorization-uri: http://localhost:8080/auth/realms/demo/protocol/openid-connect/auth
#            userinfo-uri: http://localhost:8080/auth/realms/demo/protocol/openid-connect/userinfo
#            user-name-attribute: preferred_username
#        registration:
#          demo-client:
#            provider: keycloak
#            client-id: demo-client
#            client-secret: be7efd17-348c-4c63-aee9-3435bddba64f
#            authorization-grant-type: authorization_code
#            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
#
#
##      client:
##        provider:
##          keycloak:
##            issuer-uri: http://localhost:8080/auth/realms/demo
##        registration:
##          demo-client:
##            provider: keycloak
##            client-id: demo-client
##            client-secret: be7efd17-348c-4c63-aee9-3435bddba64f
##            scope:
##              - email
##              - profile
##              - roles
#
#
##      resourceserver:
##        jwt:
##          issuer-uri: http://127.0.0.1:8080/auth/realms/demo
##          jwk-set-uri: http://localhost:8080/auth/realms/demo/protocol/openid-connect/certs
#
#
##      resourceserver:
##        opaquetoken:
##          introspection-uri: http://localhost:8080/auth/realms/demo/protocol/openid-connect/token/introspect
##          client-id: demo-client
##          client-secret: be7efd17-348c-4c63-aee9-3435bddba64f
#
#  cloud:
#    gateway:
#      default-filters:
#        - TokenRelay
#      routes:
#        - id: demo-fe-board
#          uri: http://localhost:8088/
#          predicates:
#            - name: Path
#              args:
#                patterns: /boards/**
#            - name: Method
#              args:
#                methods:
#                  - GET
#                  - POST
#                  - PUT
#                  - DELETE
#
#        - id: demo-fe-api
#          uri: http://localhost:8088/
#          predicates:
#            - Path=/api/**
#
#
##        - id: demo-fe-board
##          uri: http://localhost:8088/
##          predicates:
##            - Path=/boards/**
#
#
##        - id: demo-api
##          uri: http://localhost:7077/
##          predicates:
##            - Path=/boards/**
#
##        - id: webhook-test1
##          uri: lb://webhook
##          predicates:
##            - name: Path
##              regexp: /webhook/**
##          filters:
##            - name: RewritePath
##              regexp: /webhook/(?<uri>.*)
##              replacement: /${uri}
#
##        - id: route1
##          uri: http://localhost:8088
##          predicates:
##            - Path=/backend
##          filters:
##            - name: RequestRateLimiter
##              args:
##                redis-rate-limiter.replenishRate: 500
##                redis-rate-limiter.burstCapacity: 1000
##                redis-rate-limiter.requestedTokens: 1
#
#
### yaml import 설정
##  config:
##    import:
##      - classpath:/gateway.yaml